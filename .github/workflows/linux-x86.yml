name: "linux-x86"

on:
  push:
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 10 * * *" # Run at 2am PST (10am UTC) every day to refresh the cache.
  workflow_dispatch: # Manual trigger
    inputs:
      TENSORFLOW_SUBMODULE_COMMIT:
        description: 'The commit hash of the TensorFlow submodule to checkout. If empty, it will use the default.'
        type: string
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  presubmit:
    name: "Presubmit"
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    env:
      TENSORFLOW_SUBMODULE_COMMIT: ${{ inputs.TENSORFLOW_SUBMODULE_COMMIT }}
      
    steps:
      # Step 1: Maximize disk space with a different, more reliable action
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
          # This action removes common, large pre-installed software
          # that is often not needed by builds.
          # You can customize these options as needed.
          
      # Step 2: Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          
      # Step 3: Configure your submodule (this comes after checkout)
      - name: Configure TensorFlow Submodule Version
        run: |
          SUBMODULE_PATH="third_party/tensorflow"
          TARGET_COMMIT="${{ inputs.TENSORFLOW_SUBMODULE_COMMIT }}"

          if [[ -n "$TARGET_COMMIT" ]]; then
            echo "--- Manual Commit Specified ---"
            echo "Attempting to checkout specific commit '$TARGET_COMMIT' for $SUBMODULE_PATH..."
            cd "$SUBMODULE_PATH" || { echo "Error: Could not navigate to $SUBMODULE_PATH"; exit 1; }
            git checkout "$TARGET_COMMIT" || { echo "Error: Failed to checkout $TARGET_COMMIT."; exit 1; }
            cd - > /dev/null
            echo "Successfully checked out $SUBMODULE_PATH to $TARGET_COMMIT."
          else
            echo "--- Updating to Latest HEAD ---"
            echo "No specific commit provided. Updating $SUBMODULE_PATH to its remote HEAD..."
            git submodule update --remote "$SUBMODULE_PATH" || { echo "Error: Failed to update $SUBMODULE_PATH to remote HEAD."; exit 1; }
            echo "Successfully updated $SUBMODULE_PATH to its latest HEAD."
          fi
          echo "Current TensorFlow submodule commit: $(cd $SUBMODULE_PATH && git rev-parse HEAD)"

      # Step 4: Run your tests
      - name: Run bazel tests in Docker
        run: |
          echo "--- Checking disk space before tests ---"
          df -h
          
          bash ci/run_bazel_test_with_docker.sh
          
          echo "--- Checking disk space after tests ---"
          df -h
