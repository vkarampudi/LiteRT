name: "linux-x86"

on:
  push:
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 10 * * *" # Run at 2am PST (10am UTC) every day to refresh the cache.
  workflow_dispatch: # Manual trigger
    inputs:
      TENSORFLOW_SUBMODULE_COMMIT:
        description: 'The commit hash of the TensorFlow submodule to checkout. If empty, it will use the default.'
        type: string
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  presubmit:
    name: "Presubmit"
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      # You can still pass this if your bazel script needs it, but the cache logic is gone.
      TENSORFLOW_SUBMODULE_COMMIT: ${{ inputs.TENSORFLOW_SUBMODULE_COMMIT }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure TensorFlow Submodule Version
        # This step handles both the specific commit override and the "latest HEAD" update.
        run: |
          SUBMODULE_PATH="third_party/tensorflow"
          TARGET_COMMIT="${{ inputs.TENSORFLOW_SUBMODULE_COMMIT }}"

          if [[ -n "$TARGET_COMMIT" ]]; then
            echo "--- Manual Commit Specified ---"
            echo "Attempting to checkout specific commit '$TARGET_COMMIT' for $SUBMODULE_PATH..."
            cd "$SUBMODULE_PATH" || { echo "Error: Could not navigate to $SUBMODULE_PATH"; exit 1; }
            git checkout "$TARGET_COMMIT" || { echo "Error: Failed to checkout $TARGET_COMMIT."; exit 1; }
            cd - > /dev/null # Go back to the original directory (main repo root)
            echo "Successfully checked out $SUBMODULE_PATH to $TARGET_COMMIT."
          else
            echo "--- Updating to Latest HEAD ---"
            echo "No specific commit provided. Updating $SUBMODULE_PATH to its remote HEAD..."
            git submodule update --remote "$SUBMODULE_PATH" || { echo "Error: Failed to update $SUBMODULE_PATH to remote HEAD."; exit 1; }
            echo "Successfully updated $SUBMODULE_PATH to its latest HEAD."
          fi
          echo "Current TensorFlow submodule commit: $(cd $SUBMODULE_PATH && git rev-parse HEAD)"

      - name: Run bazel tests in Docker
        # This step encapsulates all the heavy work. It is where you should put
        # your bazel commands and any other dependencies.
        # This assumes your 'ci/run_bazel_test_with_docker.sh' script is robust.
        # We also add a simple 'df -h' to see how much space is being used.
        run: |
          echo "--- Checking disk space before tests ---"
          df -h
          
          # This script will handle its own Docker setup and teardown.
          # The key is that all the heavy lifting and temporary files will
          # be confined to the execution of this script.
          bash ci/run_bazel_test_with_docker.sh
          
          echo "--- Checking disk space after tests ---"
          df -h
